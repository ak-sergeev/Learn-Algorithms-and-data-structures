def quicksort(array, start, end):
    """
    Быстрая сортировка на месте.
    Т.е. тут не используются стеки, тем самым экономится память.
    """

    if start >= end:
        return

    # Используем первый элемент в качестве разделителя.
    # Не самый оптимальный вариант, особенно если массив почти отсортирован.
    divider = array[start]

    # Перемещаем элементы меньше разделителя в начало массива и
    # элементы большие или равные разделителю в его конец.
    lo = start
    hi = end
    while True:
        # Смотрим назад от элемента hi для значений меньше разделителя.
        while array[hi] >= divider:
            hi -= 1
            if hi <= lo:
                break
        if hi <= lo:
            # Ставим разделить тут и заканчиваем цикл.
            array[lo] = divider
            break

        # Переносим найденное значение в левую половину.
        array[lo] = array[hi]

        # Ищем элементы в левой части.
        # Элементы, которые больше разделителя.
        lo += 1
        while array[lo] < divider:
            lo += 1
            if lo >= hi:
                break
        if lo >= hi:
            # Ставим разделитель тут и заканчиваем цикл.
            lo = hi
            array[hi] = divider
            break

        # Переносим найденное значение в правую половину.
        array[hi] = array[lo]

    # Сортируем две половинки массива.
    quicksort(array, start, lo - 1)
    quicksort(array, lo + 1, end)


data = [7, 8, 9, 4, 2, 6, 5, 10, 3, 2, 1]
print(data)
# Запуск быстрой сортировки.
quicksort(data, 0, len(data) - 1)
print(data)
